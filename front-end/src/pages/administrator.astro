---
import AdminSubscriptions from "../components/administrator/formulario";
import MainLayout from "../layout/MainLayout.astro";
import { getSession } from "auth-astro/server";
import type { Plan } from "../types/plan/plan";
import type { Subscription } from "../types/subscription/subscription";
import type { User } from "../types/user/user";

// Obtener la sesi칩n del usuario
const session = await getSession(Astro.request);

// Verificar si la sesi칩n est치 iniciada
if (!session) {
  return Astro.redirect("/sign-in");
}

// ===========================================================================
// Obtener si el usuario tiene una suscripci칩n activa
// ===========================================================================
const resposePayment = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/payment`,
  {
    headers: {
      "Content-Type": "application/json",
      "accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let subscription = null;
let user = null;

if (resposePayment.ok) {
  const data = await resposePayment.json();
  subscription = data.subscription;
  user = data.user;
}

// ===========================================================================
// Obtener la lista de suscripciones
// ===========================================================================
const responseSubscriptions = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/payment/all`,
  {
    headers: {
      "Content-Type": "application/json",
      "accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let subscriptions: Subscription[] = [];

if (responseSubscriptions.ok) {
  const data = await responseSubscriptions.json();
  subscriptions = data;
}

// ===========================================================================
// Obtener los planes disponibles
// ===========================================================================
const responsePlan = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/plan`,
  {
    headers: {
      "Content-Type": "application/json",
      "accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let plans: Plan[] = [];

if (responsePlan.ok) {
  const data = await responsePlan.json();
  plans = data;
}

// ===========================================================================
// Obtener lista de usuarios
// ===========================================================================
const responseUsers = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/user`,
  {
    headers: {
      "Content-Type": "application/json",
      "accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let users: User[] = [];

if (responseUsers.ok) {
  const data = await responseUsers.json();
  users = data;
}
// ===========================================================================
---

<<<<<<< HEAD
<MainLayout title="Open Book">
=======
<MainLayout title="RMicrotik">
>>>>>>> aderyq
  <AdminSubscriptions
    client:load
    subscription={subscription}
    user={user}
    subscriptions={subscriptions}
    plans={plans}
    users={users}
    coupons={[]}
  />
</MainLayout>
