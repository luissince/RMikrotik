---
import AdminSubscriptions from "../components/administrator/formulario";
import MainLayout from "../layout/MainLayout.astro";
import type { Plan } from "../types/plan/plan";
import type { Subscription } from "../types/subscription/subscription";
import type { User } from "../types/user/user";
import { Rol } from "../types/user/rol";
import { getAuthData } from "../utils/auth";
import type { Coupon } from "../types/coupon/coupon";

// Obtener los datos de la sesión y suscripción
const { session, user, shouldSignOut } = await getAuthData(
  Astro.request,
);

// Verificar si la sesión está iniciada
if (!session) {
  return Astro.redirect("/sign-in");
}

// Verificar si el usuario no es un cliente
if(user?.rol === Rol.CLIENT){
   return Astro.redirect("/");
}

// ===========================================================================
// Obtener la lista de suscripciones
// ===========================================================================
const responseSubscriptions = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/payment/all`,
  {
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let subscriptions: Subscription[] = [];

if (responseSubscriptions.ok) {
  const data = await responseSubscriptions.json();
  subscriptions = data;
}
// ===========================================================================
// Obtener los planes disponibles
// ===========================================================================
const responsePlan = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/plan`,
  {
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let plans: Plan[] = [];

if (responsePlan.ok) {
  const data = await responsePlan.json();
  plans = data;
}

// ===========================================================================
// Obtener lista de usuarios
// ===========================================================================
const responseUsers = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/user`,
  {
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let users: User[] = [];

if (responseUsers.ok) {
  const data = await responseUsers.json();
  users = data;
}

// ===========================================================================
// Obtener lista de cupones
// ===========================================================================
const responseCoupons = await fetch(
  `${import.meta.env.PUBLIC_BASE_URL_API}/coupon`,
  {
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
      "Authorization": `${session?.user?.type} ${session.user?.token}`,
    },
  },
);

let coupons: Coupon[] = [];

if (responseCoupons.ok) {
  const data = await responseCoupons.json();
  coupons = data;
}

// Si necesita cerrar sesión, redirigir a logout
if (shouldSignOut) {
  return Astro.redirect("/logout?reason=expired");
}
---

<MainLayout title="RMicrotik">
  <AdminSubscriptions
    client:load
    session={session}
    user={user}
    subscriptions={subscriptions}
    plans={plans}
    users={users}
    coupons={coupons}
  />
</MainLayout>
