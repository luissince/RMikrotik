---
import { Image } from "astro:assets";
import logo from "../../assets/icons/logo.svg";
import Icon from "../Icon.astro";
import MenuButton from "./MenuButton.astro";
import { getSession } from "auth-astro/server";
import Button from "../Button.astro";
import NavigationMenu from "./SubMenu";
const session = await getSession(Astro.request);

const navLinks = [
  {
    name: "Inicio",
    href: "/",
  },
  {
    name: "Nosotros",
    href: "/about",
    submenu: [
      { name: "Acerca de", href: "/about/team" },
      { name: "Instructor", href: "/about/careers" },
      { name: "Servicios", href: "/about/careers" },
    ],
  },
  {
    name: "Update",
    href: "/update",
  
  },
  {
    name: "Documentos",
    href: "/documentos",
   
  },
 
  {
    name: "Contactenos",
    href: "/Contactenos",
  
  },
];


const socialLinks = [
  { name: "facebook", href: "#" },
  { name: "instagram", href: "#" },
  { name: "twitch", href: "#" },
  { name: "twitter", href: "#" },
  { name: "youtube", href: "#" },
];

const props = Astro.props;
console.log("type", props.type);
---

<header class="bg-[#181918]">
  <div class="2xl:container mx-auto px-8">
    <div class="flex flex-row justify-between py-5 gap-x-5 gap-y-5">
      <div class="flex justify-start items-center gap-x-5 w-full lg:w-auto">
        <a href="/">
          <Image src={logo} alt="logo" width={150} height={150} />
        </a>

        {
          (props.type !== "sign-in" && props.type !== "sign-up") && (
            <div class="w-full flex items-center bg-[#383838] border-[#383838] border-[2px] border-solid rounded-full group focus-within:border-[#ffffff] text-white">
              <div class="p-2 h-full px-5 py-2">
                <Icon name="search" size={20} />
              </div>
              <input
                type="text"
                class="w-full h-full px-3 py-2 bg-inherit font-normal text-sm text-inherit outline-none border-none rounded-full"
                placeholder="Buscar"
              />
              <button class="px-5 py-2 h-full rounded-r-full outline-none focus:bg-[#181918]">
                <Icon name="sound" size={20} />
              </button>
            </div>
          )
        }
      </div>

      <div class="xl:flex hidden flex-row justify-end gap-x-5">
        {
        (props.type !== "sign-in" && props.type !== "sign-up") && 
          (
            <a
              class="text-[#cccccc] py-2 text-sm font-normal flex items-center justify-center outline-none focus:text-[#ffffff] hover:text-[#ffffff]"
              href="#"
            >
              <span>Licencia</span>
            </a>

            <a
              class="text-[#cccccc] py-2 text-sm font-normal flex items-center justify-center outline-none focus:text-[#ffffff] hover:text-[#ffffff]"
              href="precios"
            >
              <span>Precios</span>
            </a>

          <Button 
            variant="primary"  
            as="a"
            href="https://github.com/login"
          >
                <span>Únete y suscríbete ahora</span>
            </Button>
          )
        }

        {
          !session ? (
            <a
              class="text-[#cccccc] py-2 text-sm font-normal flex items-center justify-center outline-none focus:text-[#ffffff] hover:text-[#ffffff]"
              href="/sign-in"
            >
              <span>Iniciar Sesión</span>
            </a>
          ) : (
            <button
              id="logout"
              class="text-[#cccccc] py-2 text-sm font-normal flex items-center justify-center outline-none focus:text-[#ffffff] hover:text-[#ffffff]"
            >
              <span>Cerrar Sesión</span>
            </button>
          )
        }
      </div>

      <div class="lg:flex xl:hidden hidden items-center gap-5">
        {
          (props.type !== "sign-in" && props.type !== "sign-up") && (
          <Button 
            variant="primary"  
            as="a"
            href="https://github.com/login"
          >
                <span>Obtén descargas ilimitadas</span>
            </Button>
          )
        }

        <MenuButton />
      </div>

      <div class="flex lg:hidden items-center">
        <MenuButton />
      </div>
    </div>

    {
      (props.type !== "sign-in" && props.type !== "sign-up") && (
        <div class="xl:flex hidden justify-start gap-5 pb-5">
          <div class="flex flex-row items-center justify-start flex-1 gap-x-10">
  {navLinks.map((link) => (
    <div class="relative group">
      <a class="text-[#cccccc] text-sm font-normal hover:text-white" href={link.href}>
        <span>{link.name}</span>
      </a>
      {/* Submenú */}
      {link.submenu && (
        <div class="absolute left-0 top-full hidden group-hover:flex flex-col mt-2 bg-gray-800 p-2 rounded-md shadow-lg">
          {link.submenu.map((sublink) => (
            <a
              class="text-[#cccccc] text-sm font-normal hover:text-white px-4 py-2 rounded-md hover:bg-gray-700"
              href={sublink.href}
            >
              {sublink.name}
            </a>
          ))}
        </div>
      )}
    </div>
  ))}
</div>


          <div class="flex flex-2 items-center gap-x-5">
            <div class="border-l-[1px] h-full border-solid border-[#cccccc]" />
            <a class="text-[#cccccc] text-sm font-normal hover:bg-red-700 duration-300 rounded-t-lg pl-2 pr-2" href="/book">
              <span>YouTube</span>
            </a>
          </div>
          <div class="flex flex-2 items-center gap-x-5">
            <div class="border-l-[1px] h-full border-solid border-[#cccccc]" />
            <a class="text-[#cccccc] text-sm font-normal  hover:bg-sky-500 duration-300 rounded-t-lg pl-2 pr-2" href="/book">
              <span>Instagram</span>
            </a>
          </div>
          <div class="flex flex-2 items-center gap-x-5">
            <div class="border-l-[1px] h-full border-solid border-[#cccccc]" />
            <a class="text-[#cccccc] text-sm font-normal  hover:bg-blue-700 duration-300 rounded-t-lg pl-2 pr-2" href="/book">
              <span>Facebook</span>
            </a>
          </div>  <div class="flex flex-2 items-center gap-x-5">
            <div class="border-l-[1px] h-full border-solid border-[#cccccc]" />
            <a class="text-[#cccccc] text-sm font-normal  hover:bg-red-800 duration-300 rounded-t-lg pl-2 pr-2" href="/book">
              <span>Tiktok <span class="animate-color-change"> <strong> Live</strong> </span></span>
            </a>
          </div>
        </div>
      )
    }
  </div>

  <!-- menu bar -->
  <div
    id="sidebar"
    data-sidebar
    class="hidden xl:hidden w-full h-screen bottom-0 left-0 top-0 ring-0 z-50"
  >
    <!--  -->
    <div
      id="overlay"
      class="w-full h-screen absolute top-0 left-0 right-0 bottom-0 cursor-pointer"
      style="background-color: rgba(0,0,0,0.7)"
    >
    </div>
    <!--  -->

    <!--  -->
    <div
      class="absolute w-full h-screen py-5 top-0 right-0 bg-[#191919] max-w-[500px]"
    >
      <div class="flex flex-col h-full gap-y-5">
        <!--  -->
        <div class="flex justify-between px-5">
          <Image src={logo} alt="logo" width={150} height={150} />
          <div class="-mx-2">
            <button
              id="close-button-sidebar"
              class="px-2 py-2 text-base font-semibold flex items-center justify-center border-[#191919] border-[1px] border-solid rounded-[4px] outline-none focus:bg-[#383838] hover:bg-[#383838]"
            >
              <Icon name="close" size={26} class="text-[#ffffff]" />
            </button>
          </div>
        </div>
        <!--  -->

        <!--  -->
        <div class="flex flex-col gap-y-4 px-5">
          {
            (props.type !== "sign-in" && props.type !== "sign-up") && (
            <Button 
              variant="primary"  
              as="a"
              href="https://github.com/login"
            >
                <span>Obtén descargas ilimitadas</span>
            </Button>
            )
          }

          {
            !session ? (
              <a
                class="bg-transparent text-white px-6 py-2 text-base font-semibold flex items-center justify-center border-white border-[1px] border-solid rounded-[4px] outline-none focus:bg-white hover:bg-white focus:border-white hover:border-white focus:text-[#191919] hover:text-[#191919]"
                href="/sign-in"
              >
                <span>Iniciar Sesión</span>
              </a>
            ) : (
              <a
                class="bg-transparent text-white px-6 py-2 text-base font-semibold flex items-center justify-center border-white border-[1px] border-solid rounded-[4px] outline-none focus:bg-white hover:bg-white focus:border-white hover:border-white focus:text-[#191919] hover:text-[#191919]"
                href="#"
              >
                <span>Cerrar Sesión</span>
              </a>
            )
          }
        </div>
        <!--  -->

        <hr class="border-[#707070]" />

        <!--  -->
        <NavigationMenu type={props.type} client:load />
        <!--  -->

        <!--  -->
        <div class="px-3">
          <div class="-mx-5">
            <ul
              class="flex flex-row flex-wrap list-none m-0 px-5 items-center gap-x-3"
            >
              {
                socialLinks.map((link) => (
                  <li>
                    <a href={link.href}>
                      <Icon
                        name={link.name}
                        size={36}
                        class="text-white hover:bg-[#383838] px-2 rounded-md"
                      />
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
        <!--  -->
      </div>
    </div>
    <!--  -->
  </div>
</header>

<script>
  const sidebar = document.getElementById("sidebar") as HTMLDivElement;
  const closeButton = document.getElementById(
    "close-button-sidebar"
  ) as HTMLButtonElement;
  const overlay = document.getElementById("overlay") as HTMLDivElement;

  closeButton.addEventListener("click", () => {
    sidebar.classList.add("hidden");
    sidebar.classList.remove("fixed");
  });

  overlay.addEventListener("click", () => {
    sidebar.classList.add("hidden");
    sidebar.classList.remove("fixed");
  });

  const { signOut } = await import("auth-astro/client");
  const logout = document.querySelector("#logout");
  if (logout) {
    logout.addEventListener("click", () => signOut({
      callbackUrl: '/goodbye',
    redirect: true 
    }));
  }
</script>
<!--Cambia de color -->
<style>
  @keyframes color-change {
    0%, 100% {
      color: #f11e1e; /* Rojo */
    }
    50% {
      color: #ffffff; /* Azul */
    }
  }

  .animate-color-change {
    animation: color-change 1s infinite;
  }
</style>
